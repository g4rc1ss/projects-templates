{
  "$schema": "http://json.schemastore.org/template",
  "author": "Asier",
  "classifications": [
    "Architecture",
    "Template",
    "csharp",
    "Web"
  ],
  "identity": "Simple Web App",
  "name": "Asier Web",
  "description": "Simple Web Application",
  "shortName": "asier.web.simple",
  "sourceName": "SimpleWeb",
  "language": "C#",
  "preferNameDirectory": true,
  "tags": {
    "language": "C#",
    "type": "solution",
    "editorTreatAs": "solution"
  },
  "symbols": {
    "UseGrpc": {
      "displayName": "GRPC",
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": false
    },
    "UseAspire": {
      "type": "computed",
      "value": "(true)"
    },
    // Databases
    "Databases": {
      "type": "parameter",
      "datatype": "choice",
      "allowMultipleValues": true,
      "choices": [
        {
          "choice": "postgresql",
          "displayName": "PostgreSQL"
        },
        {
          "choice": "sqlite",
          "displayName": "SQLite"
        },
        {
          "choice": "mongodb",
          "displayName": "Mongo Database"
        },
        {
          "choice": "litedb",
          "displayName": "LiteDB"
        }
      ],
      "defaultValue": "none"
    },
    "SqlDatabase": {
      "type": "computed",
      "value": "(UsePostgres || UseSqlite)"
    },
    "UsePostgres": {
      "type": "computed",
      "value": "(Databases == 'postgresql')"
    },
    "UseSqlite": {
      "type": "computed",
      "value": "(Databases == 'sqlite')"
    },
    "NoSqlDatabase": {
      "type": "computed",
      "value": "(UseMongodb || UseLitedb)"
    },
    "UseMongodb": {
      "type": "computed",
      "value": "(Databases == 'mongodb')"
    },
    "UseLitedb": {
      "type": "computed",
      "value": "(Databases == 'litedb')"
    },
    "DatabaseNone": {
      "type": "computed",
      "value": "(!SqlDatabase && !NoSqlDatabase)"
    },
    // Cache
    "Cache": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "none",
          "description": "None"
        },
        {
          "choice": "memorycache",
          "displayName": "In Memory",
          "description": "Memory"
        },
        {
          "choice": "Redis",
          "displayName": "Redis",
          "description": "redis"
        },
        {
          "choice": "Garnet",
          "displayName": "Garnet",
          "description": "garnet"
        }
      ],
      "defaultValue": "memorycache",
      "description": "Cache"
    },
    "UseMemoryCache": {
      "type": "computed",
      "value": "(Cache == 'memorycache')"
    },
    "UseRedis": {
      "type": "computed",
      "value": "(Cache == 'redis')"
    },
    "UseGarnet": {
      "type": "computed",
      "value": "(Cache == 'garnet')"
    }
  },
  "sources": [
    {
      "source": "../../",
      "target": "./",
      "include": [
        "*editorconfig",
        "*csharpierrc.json",
        "Directory.Build.props",
        "Directory.Packages.props",
        "RemoveUnusedDuplicatePackages.ps1"
      ]
    },
    {
      "source": "./",
      "target": "./",
      "exclude": [
        "**/[Bb]in/**",
        "**/[Oo]bj/**",
        "**/*template.config/**/*",
        "**/*.filelist",
        "**/*.user",
        "**/*idea/**/*"
      ],
      "modifiers": [
        {
          "condition": "(!SqlDatabase)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/Entities/WeatherForecastEntity.cs",
            "SimpleWeb.HostWebApi/Database/EntityConfiguration/WeatherForecastEntityConfiguration.cs",
            "SimpleWeb.HostWebApi/Database/HostedServices/MigrationHostedService.cs"
          ]
        },
        {
          "condition": "(!UsePostgres)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/Repository/PostgresPoc.cs",
            "SimpleWeb.HostWebApi/Database/PostgresContext.cs"
          ]
        },
        {
          "condition": "(!UseSqlite)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/Repository/SqlitePoc.cs",
            "SimpleWeb.HostWebApi/Database/SqliteContext.cs"
          ]
        },
        {
          "condition": "(!UseMongodb)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/Repository/MongoPoc.cs",
            "SimpleWeb.HostWebApi/Database/Entities/MongoDbEntity.cs"
          ]
        },
        {
          "condition": "(!UseLitedb)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/Repository/LitedbPoc.cs",
            "SimpleWeb.HostWebApi/Database/Entities/LiteDbEntity.cs"
          ]
        },
        {
          "condition": "(DatabaseNone)",
          "exclude": [
            "SimpleWeb.HostWebApi/Database/**/*",
            "SimpleWeb.HostWebApi/Extensions/DatabaseExtensions.cs"
          ]
        },
        {
          "condition": "(!UseGrpc)",
          "exclude": [
            "SimpleWeb.HostWebApi/GrpcServices/**/*"
          ]
        },
        // Aspire
        {
          "condition": "(!UsePostgres)",
          "exclude": [
            "SimpleWeb.AspireHost/Resources/AspirePostgresResource.cs"
          ]
        },
        {
          "condition": "(!UseMongodb)",
          "exclude": [
            "SimpleWeb.AspireHost/Resources/AspireMongodbResource.cs"
          ]
        },
        {
          "condition": "(!UseRedis)",
          "exclude": [
            "SimpleWeb.AspireHost/Resources/AspireRedisCacheResource.cs"
          ]
        },
        {
          "condition": "(!UseGarnet)",
          "exclude": [
            "SimpleWeb.AspireHost/Resources/AspireGarnetCacheResource.cs"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "path": "SimpleWeb.HostWebApi/Program.cs"
    }
  ],
  "postActions": [
    {
      "id": "build",
      "actionId": "3A7C4B45-1F5D-4A30-959A-51B88E82B5D2",
      "description": "Build project.",
      "args": {
        "executable": "dotnet",
        "args": "build",
        "redirectStandardOutput": true,
        "redirectStandardError": true
      },
      "manualInstructions": [
        {
          "text": "Run 'dotnet build'"
        }
      ],
      "continueOnError": true
    },
    {
      "id": "editor",
      "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
      "condition": "(HostIdentifier != \"dotnetcli\")",
      "description": "",
      "manualInstructions": [],
      "args": {
        "files": "0"
      },
      "continueOnError": true
    }
  ]
}