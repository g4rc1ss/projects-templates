namespace CreateDiscovery.Tests;

public static class AnalyzeCode
{
    internal const string METHOD_SOURCE = $$"""
        namespace CreateDiscovery.Sample;

        public static partial class ServiceExtensions
        {
            [Abstractions.Discover]
            public static partial void AddDependencies(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);
        }
        """;

    internal const string SERVICE_CLASS_SOURCE = $$"""
        using System;
        using CreateDiscovery.Abstractions;

        namespace CreateDiscovery.Sample;

        [Discovery(Lifetime = LifeTime.SCOPED)]
        public class ExampleService : IExample
        {
            public void Execute()
            {
                Console.WriteLine("Creating discovery generator");
            }
        }

        public interface IExample
        {
            void Execute();
        }
        """;

    internal const string EXPECTED_GENERATED_TEXT = $$"""
        // <auto-generated/>
        using Microsoft.Extensions.DependencyInjection;

        namespace CreateDiscovery.Sample;

        public static partial class ServiceExtensions
        {
            public static partial void AddDependencies(this IServiceCollection services)
            {
                services.AddScoped<CreateDiscovery.Sample.IExample, CreateDiscovery.Sample.ExampleService>();

            }
        }
        """;
}
