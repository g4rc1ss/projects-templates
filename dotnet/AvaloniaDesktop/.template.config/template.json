{
  "$schema": "http://json.schemastore.org/template",
  "author": "Asier",
  "classifications": [
    "architecture"
  ],
  "identity": "frontend-desktop-template",
  "name": "Asier Desktop Template",
  "description": "Template para aplicaciones Desktop",
  "shortName": "Front Desktop App",
  "sourceName": "FrontDesktop",
  "language": "C#",
  "preferNameDirectory": true,
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "symbols": {
    // Storage Config
    "Storage": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "displayName": "None",
          "choice": "none"
        },
        {
          "displayName": "Local System Storage",
          "choice": "LocalSystemStorage"
        }
      ],
      "defaultValue": "none",
      "displayName": "File Storages"
    },
    "UseLocalStorage": {
      "type": "computed",
      "value": "(Storage == 'LocalSystemStorage')"
    },
    "StorageNone": {
      "type": "computed",
      "value": "(!UseAzureBlobStorage && !UseLocalStorage)"
    },
    // Desktop
    "UseDesktop": {
      "displayName": "Desktop",
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": true
    },
    // Database Config
    "Databases": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "none",
          "displayName": "None"
        },
        {
          "choice": "sqlite",
          "displayName": "SQLite"
        },
        {
          "choice": "litedb",
          "displayName": "Lite DB"
        }
      ],
      "defaultValue": "sqlite"
    },
    "SqlDatabase": {
      "type": "computed",
      "value": "(UseSqlite)"
    },
    "UseSqlite": {
      "type": "computed",
      "value": "(Databases == 'sqlite')"
    },
    "NoSqlDatabase": {
      "type": "computed",
      "value": "(UseLitedb)"
    },
    "UseLitedb": {
      "type": "computed",
      "value": "(Databases == 'litedb')"
    },
    "DatabaseNone": {
      "type": "computed",
      "value": "(!SqlDatabase && !NoSqlDatabase)"
    },
    // Cache Config
    "Cache": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "none",
          "description": "None"
        },
        {
          "choice": "memorycache",
          "displayName": "In Memory",
          "description": "Memory"
        }
      ],
      "defaultValue": "memorycache",
      "description": "Cache"
    },
    "UseMemoryCache": {
      "type": "computed",
      "value": "(Cache == 'memorycache')"
    },
    // EventBus Config
    "EventBus": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "none",
          "displayName": "None"
        },
        {
          "choice": "memoryevents",
          "displayName": "In Memory"
        }
      ],
      "defaultValue": "none",
      "displayName": "Events"
    },
    "UseMemoryEvents": {
      "type": "computed",
      "value": "(EventBus == 'memoryevents')"
    },
    "EventBusNone": {
      "type": "computed",
      "value": "(!UseMemoryEvents)"
    },
    // Framework Config
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net9.0"
        }
      ],
      "defaultValue": "net9.0"
    }
  },
  "sources": [
    {
      "source": "../",
      "target": "./",
      "include": [
        "*editorconfig",
        "*csharpierrc.json",
        "Directory.Build.props"
      ]
    },
    {
      "source": "./",
      "target": "./",
      "exclude": [
        "**/[Bb]in/**",
        "**/[Oo]bj/**",
        "**/*template.config/**/*",
        "**/*.filelist",
        "**/*.user",
        "**/*idea",
        "*.sln",
        "**/Functionality/**/*"
      ],
      "modifiers": [
        // Storages
        {
          "condition": "(!UseLocalStorage)",
          "exclude": [
            "Infraestructure.Storages/LocalStorage.cs"
          ]
        },
        {
          "condition": "(StorageNone)",
          "exclude": [
            "Infraestructure.Storages/*"
          ]
        },
        // Events
        {
          "condition": "EventBusNone",
          "exclude": [
            "**/Infraestructure.Events/**/*"
          ]
        },
        {
          "condition": "!UseMemoryEvents",
          "exclude": [
            "Infraestructure.Events/Handlers/*",
            "Infraestructure.Events/IEventConsumer.cs",
            "Infraestructure.Events/ConsumerService.cs",
            "Infraestructure.Events/Publisher/MemoryEventNotificator.cs"
          ]
        },
        // Database
        {
          "condition": "(!SqlDatabase)",
          "exclude": [
            "Infraestructure.Database/Entities/UserEntity.cs",
            "Infraestructure.Database/EntityConfiguration/UserEntityConfiguration.cs",
            "Infraestructure.Database/Repository/SqlUserPoc.cs",
            "Infraestructure.Database/DatabaseContext.cs"
          ]
        },
        {
          "condition": "!UseLitedb",
          "exclude": [
            "Infraestructure.Database/Repository/LitedbPoc.cs",
            "Infraestructure.Database/Entities/LiteDbEntity.cs"
          ]
        },
        {
          "condition": "DatabaseNone",
          "exclude": [
            "**/Infraestructure.Database/**/*"
          ]
        },
        // Avalonia
        {
          "condition": "!UseAndroid",
          "exclude": [
            "**/AvaloniaDesktop.Android/**/*"
          ]
        },
        {
          "condition": "!UseIOS",
          "exclude": [
            "**/AvaloniaDesktop.iOS/**/*"
          ]
        },
        {
          "condition": "!UseDesktop",
          "exclude": [
            "**/AvaloniaDesktop.Desktop/**/*"
          ]
        }
      ]
    }
  ]
}